---

- name: Configure/Enable en_US.UTF-8 locale
  locale_gen:
    name: en_US.UTF-8
    state: present

- name: Install Ganeti general build dependencies
  apt:
    name:
      - drbd-utils
      - fping
      - graphviz
      - iproute2
      - iputils-arping
      - lvm2
      - pandoc
      - qemu-kvm
      - qemu-utils
      - socat
      - ssh

- name: Install Ganeti Python build dependencies
  apt:
    name:
      - python3
      - python3-bitarray
      - python3-docutils
      - python3-openssl
      - python3-paramiko
      - python3-psutil
      - python3-pycurl
      - python3-pyinotify
      - python3-pyparsing
      - python3-simplejson
      - python3-sphinx
      - python3-yaml
    state: present

      #      - libcurl4-openssl-dev
- name: Install Ganeti Haskell build dependencies
  apt:
    name:
      - cabal-install
      - ghc
      - ghc-ghci
      - libghc-attoparsec-dev
      - libghc-base64-bytestring-dev
      - libghc-case-insensitive-dev
      - libghc-cryptonite-dev
      - libghc-curl-dev
      - libghc-deepseq-dev
      - libghc-hinotify-dev
      - libghc-hslogger-dev
      - libghc-json-dev
      - libghc-lens-dev
      - libghc-lifted-base-dev
      - libghc-lifted-base-dev
      - libghc-network-dev
      - libghc-old-time-dev
      - libghc-old-time-dev
      - libghc-parallel-dev
      - libghc-psqueue-dev
      - libghc-temporary-dev
      - libghc-temporary-dev
      - libghc-test-framework-hunit-dev
      - libghc-test-framework-quickcheck2-dev
      - libghc-text-dev
      - libghc-utf8-string-dev
      - libghc-vector-dev
      - libghc-zlib-dev
    state: present

- name: Install old PCRE libraries (Debian < 13)
  apt:
    name:
      - libghc-regex-pcre-dev
      - libpcre3-dev
  when: ansible_distribution_release != "trixie"

- name: Install TDFA libraries (Debian >= 13)
  apt:
    name: libghc-regex-tdfa-dev
    state: present
  when: ansible_distribution_release == "trixie"

- name: Checkout Ganeti repository
  git:
    repo: "https://github.com/{{ ganeti_source }}"
    dest: /usr/src/ganeti
    version: "{{ ganeti_branch }}"
    depth: 1

- name: Run autogen.sh
  command:
    cmd: "sh autogen.sh"
    chdir: /usr/src/ganeti
    creates: /usr/src/ganeti/Makefile.in

- name: Run configure with regex-pcre (Debian < 13)
  command:
    cmd: "sh configure --with-haskell-flags='-optl -Wl,-z,relro -optl -Wl,--as-needed' --enable-restricted-commands --prefix=/usr --localstatedir=/var --sysconfdir=/etc --enable-symlinks  --with-ssh-initscript='/usr/sbin/invoke-rc.d ssh' --with-iallocator-search-path=/usr/local/lib/ganeti/iallocators,/usr/lib/ganeti/iallocators --with-os-search-path=/srv/ganeti/os,/usr/local/lib/ganeti/os,/usr/lib/ganeti/os,/usr/share/ganeti/os --with-xen-kernel=/vmlinuz --with-kvm-kernel=/vmlinuz"
    chdir: /usr/src/ganeti
  when: ansible_distribution_release != "trixie"

- name: Run configure with regex-tdfa (Debian >= 13)
  command:
    cmd: "sh configure --with-haskell-flags='-optl -Wl,-z,relro -optl -Wl,--as-needed' --enable-restricted-commands --enable-regex-tdfa --prefix=/usr --localstatedir=/var --sysconfdir=/etc --enable-symlinks  --with-ssh-initscript='/usr/sbin/invoke-rc.d ssh' --with-iallocator-search-path=/usr/local/lib/ganeti/iallocators,/usr/lib/ganeti/iallocators --with-os-search-path=/srv/ganeti/os,/usr/local/lib/ganeti/os,/usr/lib/ganeti/os,/usr/share/ganeti/os --with-xen-kernel=/vmlinuz --with-kvm-kernel=/vmlinuz"
    chdir: /usr/src/ganeti
  when: ansible_distribution_release == "trixie"

- name: Run make
  command:
    cmd: make -j 4
    chdir: /usr/src/ganeti

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/ganeti
    - /var/lib/ganeti
    - /var/log/ganeti
    - /srv/ganeti
    - /srv/ganeti/os
    - /srv/ganeti/export

- name: Run make install
  command:
    cmd: make install
    chdir: /usr/src/ganeti
